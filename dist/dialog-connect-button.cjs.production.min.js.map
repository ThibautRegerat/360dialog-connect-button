{"version":3,"file":"dialog-connect-button.cjs.production.min.js","sources":["../src/open-popup.js","../src/ConnectButton.tsx"],"sourcesContent":["let windowObjectReference = null;\nlet previousUrl = null;\n\nexport const openSignInWindow = (url, name, baseUrl) => {\n  // remove any existing event listeners\n  window.removeEventListener(\"message\", receiveMessage);\n\n  // window features\n  const strWindowFeatures =\n    \"toolbar=no, menubar=no, width=600, height=900, top=100, left=100\";\n\n  if (windowObjectReference === null || windowObjectReference.closed) {\n    /* if the pointer to the window object in memory does not exist\n      or if such pointer exists but the window was closed */\n    windowObjectReference = window.open(url, name, strWindowFeatures);\n  } else if (previousUrl !== url) {\n    /* if the resource to load is different,\n      then we load it in the already opened secondary window and then\n      we bring such window back on top/in front of its parent window. */\n    windowObjectReference = window.open(url, name, strWindowFeatures);\n    windowObjectReference.focus();\n  } else {\n    /* else the window reference must exist and the window\n      is not closed; therefore, we can bring it back on top of any other\n      window with the focus() method. There would be no need to re-create\n      the window or to reload the referenced resource. */\n    windowObjectReference.focus();\n  }\n\n  // add the listener for receiving a message from the popup\n  window.addEventListener(\n    \"message\",\n    (event) => receiveMessage(event, baseUrl),\n    false\n  );\n  // assign the previous URL\n  previousUrl = url;\n};\n\n\nconst receiveMessage = (event, baseUrl) => {\n  if (event.origin != baseUrl) {\n    return;\n  }\n\n  const { data } = event;\n  const redirectUrl = `${data}`;\n  window.location.search = redirectUrl;\n  // window.history.replaceState({}, \"\", redirectUrl);\n};","import React, {useEffect} from \"react\"\nimport { openSignInWindow } from \"./open-popup\";\n\n\ntype CallbackObject = {\n    client: string\n    channels: string[]\n    revokedChannels?: string[]\n}\n\ntype QueryParameters = {\n  email?: string\n  name?: string\n  state?: string\n  redirect_url?: string\n  partner?: string\n  next?: string\n}\n\n\ninterface IConnectButton extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  partnerId: string;\n  callback: (v: CallbackObject) => void;\n  requestedNumber?: string;\n  label?: React.ReactNode;\n  env?: \"local\" | \"staging\" | \"rc\" | \"prod\";\n  queryParameters?: QueryParameters\n}\n\nconst ConnectButton = ({\n  className,\n  partnerId,\n  callback,\n  requestedNumber,\n  label = \"Connect 360dialog\",\n  env=\"prod\",\n  queryParameters,\n  ...props\n}\n: IConnectButton) => {\n\n  const baseUrl =\n    (env === 'local' && 'http://0.0.0.0:8082') ||\n    (env === 'staging' && 'https://admin.hub-staging.360dialog.io') ||\n    (env === 'rc' && 'https://rc-admin.360dialog.io') ||\n    'https://hub.360dialog.com';\n    \n\n  let permissionUrl = requestedNumber\n    ? `${baseUrl}/dashboard/app/${partnerId}/permissions?number=${requestedNumber}`\n    : `${baseUrl}/dashboard/app/${partnerId}/permissions`;\n\n  if (queryParameters) {\n    let values = Object.values(queryParameters)\n    Object.keys(queryParameters).forEach((k, idx) => {\n      if (idx === 0 && !requestedNumber) {\n        permissionUrl = permissionUrl + `?${k}=${values[idx]}`;\n      } else {\n        permissionUrl = permissionUrl + `&${k}=${values[idx]}`;\n      }\n    })\n  }\n\n\n  const getUrlParameter = (params: string, name: string) => {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n    var results = regex.exec(params);\n    return results === null\n      ? \"\"\n      : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  };\n\n  useEffect(() => {\n    const params = window.location.search;\n    const client = getUrlParameter(params, \"client\");\n    const channels = getUrlParameter(params, \"channels\");\n    const revokedChannels = getUrlParameter(params, 'revoked');\n\n    if (client && channels) {\n      const channelsArray = channels\n        .substring(1, channels.length - 1)\n        .split(\",\");\n      \n        let callbackObj: CallbackObject = {\n          client: client,\n          channels: channelsArray,\n        };\n\n        if (revokedChannels) {\n          const revokedChannelsArray = revokedChannels\n            .substring(1, revokedChannels.length - 1)\n            .split(',');\n          callbackObj['revokedChannels'] = revokedChannelsArray;\n        }\n        callback(callbackObj);\n\n      // remove search parameters from URL after fetching them\n      // window.history.replaceState(null, \"\", window.location.pathname);\n    }\n\n    // send to parent (opener) window and close small window\n    if (window.opener) {\n      window.opener.postMessage(params);\n      window.close();\n    }\n  }, []);\n\n  return (\n    <button\n      className={className ? className : '360dialog-connect-button'}\n      onClick={() =>\n        openSignInWindow(\n          permissionUrl,\n          'connect-360dialog',\n          window.location.origin\n        )\n      }\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default ConnectButton"],"names":["windowObjectReference","previousUrl","receiveMessage","event","baseUrl","origin","window","location","search","data","className","partnerId","callback","requestedNumber","label","env","queryParameters","props","permissionUrl","values","Object","keys","forEach","k","idx","getUrlParameter","params","name","replace","results","RegExp","exec","decodeURIComponent","useEffect","client","channels","revokedChannels","callbackObj","substring","length","split","revokedChannelsArray","opener","postMessage","close","React","onClick","url","removeEventListener","strWindowFeatures","closed","open","focus","addEventListener","openSignInWindow"],"mappings":"oJAAIA,EAAwB,KACxBC,EAAc,KAuCZC,EAAiB,SAACC,EAAOC,GACzBD,EAAME,QAAUD,IAMpBE,OAAOC,SAASC,UAFCL,EAATM,sHCfY,gBACpBC,IAAAA,UACAC,IAAAA,UACAC,IAAAA,SACAC,IAAAA,oBACAC,MAAAA,aAAQ,0BACRC,IAAAA,aAAI,SACJC,IAAAA,gBACGC,0IAIGb,GACK,UAARW,EAAmB,sBACX,YAARA,GAAqB,2CACb,OAARA,GAAgB,iCACjB,4BAGEG,EAAgBL,EACbT,oBAAyBO,yBAAgCE,EACzDT,oBAAyBO,oBAE5BK,EAAiB,KACfG,EAASC,OAAOD,OAAOH,GAC3BI,OAAOC,KAAKL,GAAiBM,SAAQ,SAACC,EAAGC,GAIrCN,EAHU,IAARM,GAAcX,EAGAK,MAAoBK,MAAKJ,EAAOK,GAFhCN,MAAoBK,MAAKJ,EAAOK,UAQhDC,EAAkB,SAACC,EAAgBC,GACvCA,EAAOA,EAAKC,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,WAE/CC,EADQ,IAAIC,OAAO,SAAWH,EAAO,aACrBI,KAAKL,UACN,OAAZG,EACH,GACAG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,cAGnDK,aAAU,eACFP,EAASpB,OAAOC,SAASC,OACzB0B,EAAST,EAAgBC,EAAQ,UACjCS,EAAWV,EAAgBC,EAAQ,YACnCU,EAAkBX,EAAgBC,EAAQ,cAE5CQ,GAAUC,EAAU,KAKhBE,EAA8B,CAChCH,OAAQA,EACRC,SANkBA,EACnBG,UAAU,EAAGH,EAASI,OAAS,GAC/BC,MAAM,SAOHJ,EAAiB,KACbK,EAAuBL,EAC1BE,UAAU,EAAGF,EAAgBG,OAAS,GACtCC,MAAM,KACTH,EAAW,gBAAsBI,EAEnC7B,EAASyB,GAOT/B,OAAOoC,SACTpC,OAAOoC,OAAOC,YAAYjB,GAC1BpB,OAAOsC,WAER,IAGDC,wCACEnC,UAAWA,GAAwB,2BACnCoC,QAAS,kBD7GiB,SAACC,EAAKpB,EAAMvB,GAE1CE,OAAO0C,oBAAoB,UAAW9C,OAGhC+C,EACJ,mEAE4B,OAA1BjD,GAAkCA,EAAsBkD,OAG1DlD,EAAwBM,OAAO6C,KAAKJ,EAAKpB,EAAMsB,GACtChD,IAAgB8C,GAIzB/C,EAAwBM,OAAO6C,KAAKJ,EAAKpB,EAAMsB,IACzBG,QAMtBpD,EAAsBoD,QAIxB9C,OAAO+C,iBACL,WACA,SAAClD,UAAUD,EAAeC,EAAOC,MACjC,GAGFH,EAAc8C,EC6ERO,CACEpC,EACA,oBACAZ,OAAOC,SAASF,UAGhBY,GAEHH"}